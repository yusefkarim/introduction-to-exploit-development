.data
    shell: .ascii "/bin/shX"

.text
.global _start
_start:
    ### char *shell[] = {"/bin/sh", NULL}; ###
    ### execve("shell[0], shell, NULL); ###
    mov $11, %eax       # Store syscall for execve (11) in %eax
    mov $shell, %ebx    # Store string of executable we want to execute in %ebx
    movb $0, 7(%ebx)    # Overwrite the last byte (X) in %ebx to be NULL
    mov $0, %ecx        # Store NULL in %ecx
    int $0x80           # Interrupt to make the syscall

    ### exit(0); ###
    movl $1, %eax   # Store syscall for exit (1) in %eax
    movl $0, %ebx   # Store the exit value we want to return in %ebx
    int $0x80       # Interrupt to make the syscall
