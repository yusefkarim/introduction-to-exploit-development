.data
    msg: .ascii "Hello x86!\n"

.text
.global _start
_start:
    ### write(1, msg, 11); ###
    movl $4, %eax   # Store syscall for write (4) in %eax
    movl $1, %ebx   # Store the numerical value for STDIN (1) in %ebx
    movl $msg, %ecx # Store the start address of our string to print (msg) in %ecx
    movl $11, %edx  # Store number of characters we want to print in %edx
    int $0x80       # Interrupt to make the syscall

    ### exit(0); ###
    movl $1, %eax   # Store syscall for exit (1) in %eax
    movl $0, %ebx   # Store the exit value we want to return in %ebx
    int $0x80       # Interrupt to make the syscall
