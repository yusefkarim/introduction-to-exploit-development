.syntax unified

.data
    msg: .asciz "Hello, ARM!\n"
    .equ msg_len, .-msg

.text
.global _start

_start:
    .code 32
    @@@ write(1, msg, sizeof(msg)); @@@
    mov r0, 1           @ Store the numerical value for STDIN (1) in r0
    ldr r1, msg_addr    @ Load the address of our string to print (msg) in r1
    mov r2, msg_len     @ Store number of characters we want to print in r2
    mov r7, 4           @ Store syscall for write (4) in r7
    swi 0               @ Software interrupt to make the syscall

    @@@ exit(0); @@@
    mov r0, 0           @ Store the exit value want to return in r0
    mov r7, 1           @ Store the sycall for exit (0) in r7
    swi 0               @ Software interrupt to make the syscall

msg_addr:
    .word msg

